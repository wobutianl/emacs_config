;;; jerry-basic.el ---;;smart copy   m-k  (复制光标到行尾) (defadvice kill-line (before check-position activate)   (if (member major-mode  '(emacs-lisp-mode scheme-mode lisp-mode  c-mode c++-mode objc-mode js-mode  latex-mode plain-tex-mode))        (if (and (eolp) (not (bolp)))        (progn (forward-char 1)           (just-one-space 0)              (backward-char 1))))) (defadvice kill-ring-save (before slick-copy activate compile)   "When called interactively with no active region, copy a single line instead."  (interactive  (if mark-active  (list  (region-beginning)  (region-end))               (message "Copied line")          (list  (line-beginning-position)            (line-beginning-position 2))))) (defadvice kill-region (before slick-cut activate compile)   "When called interactively with no active region, kill a single line instead."   (interactive     (if mark-active  (list  (region-beginning)  (region-end))    (list  (line-beginning-position)           (line-beginning-position 2)))))    ;; Copy line from point to the end, exclude the line break (defun qiang-copy-line (arg)   "Copy lines (as many as prefix argument) in the kill ring"   (interactive "p")   (kill-ring-save (point)               (line-end-position))               (message "%d line%s copied" arg (if (= 1 arg) "" "s"))) ;;修改中文文本的行距,3个象素就可以了吧(setq-default line-spacing 3);;启用C-x,C-v,C-s这些通用设置(cua-mode t);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;备份设置;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;emacs还有一个自动保存功能，默认在~/.emacs.d/auto-save-list里，这个非常有用;;启用版本控制，即可以备份多次(setq version-control t);;备份最原始的版本两次，记第一次编辑前的文档，和第二次编辑前的文档(setq kept-old-versions 2);;备份最新的版本十次，理解同上(setq kept-new-versions 10);;删掉不属于以上版本的版本(setq delete-old-versions t);;设置备份文件的路径(setq backup-directory-alist '(("." . "~/.emacs.d/backup")));;备份设置方法，直接拷贝(setq backup-by-copying t)(setq make-backup-file t);;自动补全功能;;你可以设置以下 hippie-expand 的补全方式。它是一个优先列表， hippie-expand 会优;;先使用表最前面的函数来补全这是说，首先使用当前的buffer补全，如果找不到，就到别的可见;;的窗口里寻找，如果还找不到，那么到所有打开的buffer去找，如果还那么到kill-ring;;里，到文件名，到简称列表里，到list, 当前使用的匹配方式会在 echo 区域显示。;;特别有意思的是 try-expand-line，它可以帮你补全整整一行文字。我很多时后有两行文字大致;;相同，只有几个字不一样，但是我懒得去拷贝粘贴以下。那么我就输入这行文字的前面几个字。然后;;多按几下 M-/ 就能得到那一行。(setq hippie-expand-try-functions-list  '( ;senator-try-expand-semantic ;优先调用了senator的分析结果-很慢-还是使用吧  try-expand-line ; 补全当前行  try-expand-line-all-buffers  try-expand-list ; 补全一个列表  try-expand-list-all-buffers  try-expand-dabbrev ; 搜索当前 buffer  try-expand-dabbrev-visible ; 搜索当前可见窗口  try-expand-dabbrev-all-buffers ; 搜索所有 buffer  try-expand-dabbrev-from-kill ; 从 kill-ring 中搜索  try-complete-file-name ; 文件名匹配  try-complete-file-name-partially ; 文件名部分匹配  try-complete-lisp-symbol ; 补全 lisp symbol  try-complete-lisp-symbol-partially ; 部分补全 elisp symbol  try-expand-whole-kill  ))  ;;------------显示时间设置------------------------------;;时间戳设置(time-stamp)，设定文档上次保存的信息(setq time-stamp-active t);;去掉time-stamp的警告？(setq time-stamp-warn-inactive t);;设置time-stamp的格式，我如下的格式所得的一个例子：(setq time-stamp-format "%:u %02m/%02d/%04y %02H:%02M:%02S");;将修改时间戳添加到保存文件的动作里。(add-hook 'write-file-hooks 'time-stamp);;时间显示设置(display-time-mode 1) ;;时间使用24小时制(setq display-time-24hr-format t);;时间显示包括日期和具体时间(setq display-time-day-and-date t);;时间栏旁边启用邮件设置(setq display-time-use-mail-icon t);;时间的变化频率(setq display-time-interval 10);;显示时间的格式(setq display-time-format "%m月%d日%A%H:%M")(line-number-mode t);;显示行列号;;将默认模式从fundemental-mode改为text-mode(setq default-major-mode 'text-mode);;启用minibuffer，好像是默认设置吧(minibuffer-electric-default-mode 1);;在minibuffer里启用自动补全函数和变量(icomplete-mode 1);;所有的问题用y/n方式，不用yes/no方式。有点懒，只想输入一个字母(fset 'yes-or-no-p 'y-or-n-p);;允许minibuffer自由变化其大小（指宽度)(setq resize-mini-windows t);;当寻找一个同名的文件，改变两个buffer的名字,前面加上目录名(setq uniquify-buffer-name-style 'forward);;在emacs读man文档时，使用当前buffer(setq Man-notify-method 'pushy);;允许自动打开图片，如wiki里面(auto-image-file-mode t);;可以操作压缩文档(auto-compression-mode 1);;显示默认的文档的宽度，看起来比较舒服？(setq default-fill-column 60);;指针不要闪，我得眼睛花了(blink-cursor-mode -1)(transient-mark-mode 1);;当指针到一个括号时，自动显示所匹配的另一个括号(show-paren-mode 1);;去掉烦人的警告铃声(setq visible-bell nil);;滚动页面时比较舒服，不要整页的滚动(setq scroll-step 1  scroll-margin 3  scroll-conservatively 10000)  ;;设定句子结尾，主要是针对中文设置(setq sentence-end "\\([。！？]\\|……\\|[.?!][]\"')}]*\\($\\|[ \t]\\)\\)[ \t\n]*")(setq sentence-end-double-space nil)(show-paren-mode t);;打开括号匹配显示模式(setq show-paren-style 'parenthesis);;括号匹配时可以高亮显示另外一边的括号，但光标不会烦人的跳到另一个括号处。(mouse-avoidance-mode 'animate);;光标靠近鼠标指针时，让鼠标指针自动让开，别挡住视线。;;去掉Emacs和gnus启动时的引导界面(setq inhibit-startup-message t)(setq gnus-inhibit-startup-message t);;当指针移到另一行，不要新增这一行？(setq next-line-add-newlines nil);;在文档最后自动插入空白一行，好像某些系统配置文件是需要这样的(setq require-final-newline t)(setq track-eol t);;设定删除保存记录为200，可以方便以后无限恢复(setq kill-ring-max 200);;增大使用查找函数和变量的寻找范围(setq apropos-do-all t);;使用ispell程序作为Emacs的拼写检查程序(setq-default ispell-program-name "ispell");;改变emacs标题栏的标题,显示buffer的名字(setq frame-title-format "emacs-jerryfive@%b");;允许emacs和外部其他程序的粘贴(setq x-select-enable-clipboard t);;启动Emacs Server,然后用emacsclient起动emacs(server-start);;把这些缺省禁用的功能打开。(put 'set-goal-column 'disabled nil);;使用narrow功能时的一个设置(put 'narrow-to-region 'disabled nil) ; C-x n n(put 'narrow-to-page 'disabled nil) ; C-x n p(put 'narrow-to-defun 'disabled nil) ; C-x n d(put 'upcase-region 'disabled nil)(put 'downcase-region 'disabled nil)(put 'LaTeX-hide-environment 'disabled nil);;向左右滚动的命令激活：C-x < 和 C-x >(put 'scroll-left 'disabled nil);;可以递归的使用 minibuffer。(setq enable-recursive-minibuffers t);;Save bookmarks file each time a bookmark is added, not just on exit.(setq bookmark-save-flag 1);;使用GTK风格的toolbar(setq icon-map-list '(x-gtk-stock-map));;使用旧的dialog风格,不使用gtk的(setq x-gtk-use-old-file-dialog t);;自动重载更改的文件(global-auto-revert-mode 1);;custome的风格改为单一的树状风格(setq custom-buffer-style 'brackets);;当鼠标移动的时候自动转换frame，window或者minibuffer(setq mouse-autoselect-window t);;使用C-k删掉指针到改行末的所有东西(setq-default kill-whole-line t);;;;;  speed bar set(setq speedbar-show-unknown-files t);;可以显示所有目录以及文件(setq dframe-update-speed nil);;不自动刷新，手动 g 刷新(setq speedbar-update-flag nil)(setq speedbar-use-images nil);;不使用 image 的方式(setq speedbar-verbosity-level 0);;使用 n 和 p 可以上下移动，;; + 展开目录或文件进行浏览，- 收缩，RET 访问目录或文件，g 更新 speedbar。(setq auto-mode-alist      ;; 将文件模式和文件后缀关联起来      (append '(("\\.py\\'" . python-mode)                ("\\.s?html?\\'" . html-helper-mode)                ("\\.asp\\'" . html-helper-mode)                ("\\.phtml\\'" . html-helper-mode)                ("\\.css\\'" . css-mode))              auto-mode-alist))			  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;key binding;;;;;;;;;;;;;;;;;;;;;;;;(global-set-key (kbd "M-k") 'qiang-copy-line)  ;;;m-k  (复制光标到行尾) (global-set-key [(meta ?/)] 'hippie-expand) ;;;自动补全一行(global-set-key [home] 'beginning-of-buffer)(global-set-key [end] 'end-of-buffer);;设置home键指向buffer开头，end键指向buffer结尾(global-set-key (kbd "C-,") 'scroll-left);; "C-,"设为屏幕左移命令(global-set-key (kbd "C-.") 'scroll-right);; "C-."设为屏幕右移命令(provide 'jerry-basic);;; jerry-basic.el ends here