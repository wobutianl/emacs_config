#+TITLE: Android-Telli项目总结
 [[~/file/wiki.org][首页]]

* 启动，人员分配
 项目的人员选择，是被动的，上头的人分配好了相关的任务，让人主动报名时，没有一个人出头，我们四个因为在一个楼层，所以就选在了一起当任这个任务，
我也算是最后一个被确认下来的人。\\
其实，两个项目 ，我都是比较喜欢的，第一个项目，我可以学习的Jango，可以参与多人的合作。也可以学习到Android的项目，两全齐美。\\
第二个项目，纯Android的，想了，整个逻辑比较简单，只是涉及到相关的功能，接口的调用，应该很容易完成，也算是重新学习一下Android的东西。\\
但是第一个项目，他们说想用Java来做，我就有点不太想了，分哪去，我都是可以的。我们四个一组，算是有缘分吧。也因此有了我们第一个商讨。
* 项目了解
这个Androi项目，大体是做一个语音助手的雏形，利用公司的，第三方的工具去实现几个简单的语音功能（查天气，股票，打开App）。\\
- 说说我最开始的想法，也就是整个软件的逻辑
  - 调用Androi系统的Record录音去获取用户的音频文件。（一般是amw)
  - 调用百度或者讯飞的语音识别库，将amw文件转为String格式。
  - 要有一个数据处理函数将String转为 Server需要的XML格式，和从XML 格式转为相应的数据结构
    - 这里要说细说一下，因为要实现不同的功能，那就需要多个转换函数
  - 然后就是一个和Server打交道的ConServer组，负责和Server打交道。
这是我最初的想法。其中有很多主观的想法。
* 第一次商讨
接到了任务，对于四个都没有做过Android项目的人来说，吐糟一下，可能可以更好的合作，就在一起砍大山了。于是，第一次的商讨，大体就算是相互认识了。
* 第二次商讨，任务初步划分
第二次商讨就是要确定出一个组长来，然后分配好各自要做的事情。每个人都说出了自己对这个东西的想法。
- 潘永飞，比较谦虚，总说自己什么都不懂。
- 林炳，属于技术型人才，对问题有自己的想法，做事比较认真。
- 张健，属于学习型，自信型。能很快的学习并应用相关的技术。很有自己的想法。
- 我，比较内向，不善于表达，就爱胡思乱想。
这一次，很明显，张健成了我们组的核心。\\
张健对整个任务做了一个大概的分析，我则阐述了我的最初的思路。因为我时间最多吧，居然让我当了组长，当然我也很想当组长试试自己对任务的掌握是否到位，也就欣然接受了。
* 第三次商讨
第三次商讨，就把任务的负责人也叫过来了，说了下我们的想法。
- 把软件分为四个模块
  - 语音组，负责VR和TTS。（因为前一天，我把百度的Test跑了一下，觉得应该不难）
  - Data组，负责数据的转换（parseXML, parseString）
  - Conserver组，负责与Server打交道。
  - 一个人负责UI和最后的集成。
- 人员分配
  - 我和张健负责语音　＋　UI集成
  - 潘 + 林 负责Data和Server组。
- 文档分配
  - 我负责最开始的需求分析 + UML图的构建
  - 潘负责接口的文档
  - 林负责最后的使用说明。
  - 因为语音的任务比较重，所以没有分配什么文档。

* 第一次集成
任务划分下去，其他东西就显得容易得多了，不管是环境的配置，还是库的使用。\\
把使用的软件的标准，利用的库，都设定好，其他的就是去学习去利用了。\\
一个星期的时间，我们迎来了第一次的集成。\\
这里不得不说一下线程的问题，这也是组内讨论最多的，要不要用多线程。\\
我最开始让他们都提供给我一个接口，我去调用他们的接口，开启他那个线程就好了。
我自己测试可以实现，但是在第一次集成的时候，发现并不如意，也不是每个人都给我了一个线程的接口。
于是这个想法就先放弃了。\\
我直接使用函数的调用的方式，也即顺序调用的方式去实现整个逻辑。也问过别人有什么好的方法去实现这个的逻辑。
别人给我介绍了：观察者模式，监听模式，Server调用，循环模式等。这里走了很多的弯路。\\
第一次，我就只在VR和Conserver上使用了线程调度。程序能够顺利的跑起来。
* 第四次商讨
时间到了第二周，大作业中期汇报，我们拿着功能完成，Bug不少的软件去测试了。\\
本想，应该会得到许多意见，没想到还算是过关的，虽然确实有很多的Bug，但是也算是我们交出一第一个作业。大家都挺高兴。
* 第二次任务分配
第二次任务，更多的是文档的写作了。其实大体和第一次相同。但组内有个好玩的事。
几乎每个人都在用不同的工具去写。
- 张健：用了Emacs生成的Html文件
- 潘永飞：用了Doxygen软件生成接口文档（注释）
- 林柄：用了Word文档。
- 我：老老实实的用了EXCEL 哈哈。
所以组内的文档百花齐放呀。
* Bug修复
后面的集成，更多是Bug基础上的修复，每个组员将自己做的东西提交上来。我在这边集成，修改。
* 成形
软件最后的汇报，还是出了一些Bug，一些我们遇到过的，一些我们还没有办法解决的，一些Server本身的问题，一些自己没有做好的。
但算是交出了一份自己满意的作品。Bingo！
* 总结
- 比较后悔的事 :: 没有使用上Github，原本为项目建立的Github，最终还是没能用了。可能学习成本太高了吧。我也对Git不太熟悉，
其实项目的集成可以做得比这简单的。
最后只能退而求其次，用了文件传送（飞鸽），因为SVN，我更不熟悉。
- 比较自责的事 :: 没有对任务的把握不准，让有人很忙，让人没有学到更多的东西。
- 比较高兴的事 :: 每个人都比较配合我，大家都很好。
