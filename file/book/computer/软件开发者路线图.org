#+TITLE: 软件开发者路线图
#+AUTHOR: zhuxiaolin

* 做一个软件学徒
** 向内关注自身
* 做一个软件师傅
** 一个人帮助一个知道自己在做什么的人，从而让他学到东西
* 学徒模式
** 空杯心态
- 知道的越多，你就要学会放下越多
- 已有的知识，经验
- 学历
- 头衔
** 白色腰带
- 黑色腰带：知道自己在做什么。
- 白色腰带：保持一个初学者的心态
** 暴露自己的无知
- 无知就是无知。
** 写下自己写过最复杂的系统
- 参加过最复杂的系统
- 找到自己所处的位置
- 准确的自我评价
** 软件开发 = 学习+交流
- 订阅博客
- 写博客
- 读书后，写邮件给作者
- 网上的教学视频
** 思考源代码
- 读别人的代码
- 查看别人的结构
- 试着重构
- 想想作者为什么要这样构建
- 形成一个自己的工具盒

* 经验
- 放一个空的程序文档，随时测试你的想法！！
- 学一门新语言
  - 确保周围有一个此语音的专家，
  - 看一本语音规范
  - 问专家，为什么要选择这个语音
  - 添加到自己的语言库的原则中去
  - 看源代码,看看作者怎么写的。
  - 强迫自己按新语言的规范去写东西
- 问别人要他们的履历，总结出五项重要的技能，
  - 五项技能写入自己的学习计划中
  - 定期更新自己的履历
- 列举目前工作前提下，你以后能从事的三件事
  - 针对三件事，可能导向的另外三件事
- 给自己定头衔
  - 一个
- 想象未来的自己
  - 10年后的自己，可能扮演最奇怪的角色
  - 20，30年后的自己想经历什么生活
  - 40年后，别人问自己工作经历中，影响最大的是什么
- 写下15项能为你提供动力的事。
  - 写5项动力是来自别人的。
  - 列出5项真的重要的。
- 上班前，想三件今天应该要做的事，
  - 不要受同事聊天的影响
- 想想，你不能做开发了，你会怎么办
  - 写下你愿意去做的事
  - 问那些正在从事的人，他们喜欢做什么
- 基于使用的工具，语言，读过的博客等
  - 加入社区
  - 线下聚会
  - 自己创办聚会（社区）
- 启动或者加入一个开源项目（只有一个）
- 主动完成团队的无聊，简单的任务。
  - 创造性的解决这个问题
- 以一个项目为导向，坚持项目的进程，
  - 重构自己的项目，
  - 加入新学的设计方法
- 构建自己的学习Wiki，
  - 有自己的工具盒
  - 有自己的履历
  - 有自己的学习列表
  - 自己的语言库（包括原则）
  - 自己Follow的源代码
  - 个人实践图（自己做的事，学习的东西，之间的关系）可以明确自己的目标。
  - 自己的工具列表
- 阅读列表
  - 有好书更新
  - 看完更新
  - 排序
- 
