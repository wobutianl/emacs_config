#+TITLE: Ascii

* ASCII 存在的原因：
- 原来的计算机只能表示数字，想要计算机能表示字符，就用数字与字符一一对应
- 字节：代表一个系统能够处理的最小单位（不一定是8比特）
- 8比特可以代码 256个字符，但26个字母 + 数字等，才用了前128个。
* OEM 的产生
- OEM 是什么：应用后面的128位表示不同的字符。
* MBCS (多字节字符集 + 中文字符集）
- 根据第一个字节来选择不同的码表进行解析
- （比如中文字符集：GB2312 + GBK ）
- CP936 （微软用第936页代码表示）
* ANSI ， 国家标准， ISO标准
- 通常说的ANSI编码是指平台的默认编码（e.g：英文：ISO－8859-1， 中文的GBK）
- 国标：中国（GBK，GB2312，GB18030）
* unicode
- 出现的目标：在一份文档中显示所有的字符
- unicode字符集涵盖了目前人类使用的所有字符，并为每具字符进行统一编码分配唯一的字符码
- unicode将字符集和字符编码方案分离开（每个字符集都能找到唯一确定的编号）
- 常见的unicode编码：
  - ucs-2/ utf-16: ucs-2:使用固定的2字节，只能表示：2^16 = 25535个字符
  - utf-16:使用变字节：最少两个，可以扩展到所有unicode
  - utf-8：使用 1－ 4 个字节来表示（ASCII字符还是用单字节表示）
  - GB18030：只能查找表的手段进行编码
* BOM 
- BOM 是 Byte Order Mark 的缩写。
  - 是UTF编码方案里用于标识编码的标准标记， 
  - 在UTF-16里本来是FF FE，变成UTF-8就成了EF BB BF

* 其它信息
- 字符集：字符的集合
- 字符码：字符集中每个字符的数字编号
- 编码：将字符转换成字节流
- 解码：字节流解析成字符
- 大小端：多字节编码：先传哪端（鸡蛋的大小端）
  - 网络传输都是大端模式（先写高位字节）：反向读的。
